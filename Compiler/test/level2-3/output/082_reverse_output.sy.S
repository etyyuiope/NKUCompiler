.macro mov32, reg, val
 	movw \reg, #:lower16:\val
 	movt \reg, #:upper16:\val
.endm
.macro cpu_id, rd
 	mrc	p15, 0, \rd, c0, c0, 5
 	and	\rd, \rd, #0xF
.endm
.text
.syntax unified

.data
.globl main
.type main, %function
main:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBmain:
	mov r9, #200
	mov r0, r9
	bl reverse
	mov r9, r0
	add sp, sp, #0
	mov r0, #0
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.globl reverse
.type reverse, %function
reverse:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBreverse:
	mov r9, r0
	mov r7, #1
	cmp r9, r7
	mov r7, #0
	movle r7, #1
	mov r6, #0
	cmp r7, r6
	beq .LBB_reverse0_ELSE
	b .LBB_reverse0_IF
.LBB_reverse0_IF:
	bl getint
	mov r7, r0
	add sp, sp, #0
	mov r8, r7
	mov r0, r8
	bl putint
	mov r7, r0
	add sp, sp, #0
	b .LBB_reverse0_END_IF
.LBB_reverse0_ELSE:
	bl getint
	mov r8, r0
	add sp, sp, #0
	mov r8, r8
	sub r9, r9, #1
	mov r0, r9
	bl reverse
	mov r9, r0
	add sp, sp, #0
	mov r0, r8
	bl putint
	mov r9, r0
	add sp, sp, #0
	b .LBB_reverse0_END_IF
.LBB_reverse0_END_IF:
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.ident "@ Generated by Takanashi Compiler Â© Haobin Chen & Jiawei Xu 1640007220"