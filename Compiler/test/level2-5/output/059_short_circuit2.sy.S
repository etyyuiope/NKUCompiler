.macro mov32, reg, val
 	movw \reg, #:lower16:\val
 	movt \reg, #:upper16:\val
.endm
.macro cpu_id, rd
 	mrc	p15, 0, \rd, c0, c0, 5
 	and	\rd, \rd, #0xF
.endm
.text
.syntax unified

.data
.globl func
.type func, %function
func:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBfunc:
	mov r9, r0
	mov r8, #50
	cmp r9, r8
	mov r8, #0
	movle r8, #1
	mov r7, #0
	cmp r8, r7
	beq .LBB_func0_ELSE
	b .LBB_func0_IF
.LBB_func0_IF:
	mov r0, r9
	bl putint
	mov r8, r0
	mov r0, #1
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14
.LBB_func0_ELSE:
	mov r0, r9
	bl putint
	mov r9, r0
	mov r0, #0
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.globl main
.type main, %function
main:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBmain:
	mov r0, #0
	bl func
	mov r9, r0
	mov r8, #1
	cmp r9, r8
	mov r9, #1
	beq .LBmain3_COND_END
	mov r0, #50
	bl func
	mov r8, r0
	mov r7, #1
	cmp r8, r7
	mov r8, #0
	bne .LB_main6_COND_END
	mov r0, #100
	bl func
	mov r7, r0
	mov r6, #0
	cmp r7, r6
	mov r7, #0
	moveq r7, #1
	mov r8, r7
.LB_main6_COND_END:
	mov r9, r8
.LBmain3_COND_END:
	mov r8, #0
	cmp r9, r8
	beq .LBB_main1_ELSE
	b .LBB_main1_IF
.LBB_main1_IF:
	mov r9, #0
	b .LBB_main1_END_IF
.LBB_main1_ELSE:
	mov r9, #1
	b .LBB_main1_END_IF
.LBB_main1_END_IF:
	mov r0, #50
	bl func
	mov r9, r0
	mov r8, #1
	cmp r9, r8
	mov r9, #0
	bne .LB_main13_COND_END
	mov r0, #40
	bl func
	mov r8, r0
	mov r7, #1
	cmp r8, r7
	mov r8, #0
	moveq r8, #1
	mov r9, r8
.LB_main13_COND_END:
	mov r8, #0
	cmp r9, r8
	mov r9, #1
	bne .LBmain11_COND_END
	mov r0, #1
	bl func
	mov r8, r0
	mov r7, #1
	cmp r8, r7
	mov r8, #0
	moveq r8, #1
	mov r9, r8
.LBmain11_COND_END:
	mov r8, #0
	cmp r9, r8
	beq .LBB_main2_ELSE
	b .LBB_main2_IF
.LBB_main2_IF:
	mov r9, #0
	b .LBB_main2_END_IF
.LBB_main2_ELSE:
	mov r9, #1
	b .LBB_main2_END_IF
.LBB_main2_END_IF:
	mov r0, #0
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.ident "@ Generated by Takanashi Compiler Â© Haobin Chen & Jiawei Xu 1640004947"