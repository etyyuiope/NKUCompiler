.macro mov32, reg, val
 	movw \reg, #:lower16:\val
 	movt \reg, #:upper16:\val
.endm
.macro cpu_id, rd
 	mrc	p15, 0, \rd, c0, c0, 5
 	and	\rd, \rd, #0xF
.endm
.text
.syntax unified

.data
.globl __HELLO
__HELLO:
.word 87
.word 101
.word 108
.word 99
.word 111
.word 109
.word 101
.word 32
.word 116
.word 111
.word 32
.word 116
.word 104
.word 101
.word 32
.word 74
.word 97
.word 112
.word 97
.word 114
.word 105
.word 32
.word 80
.word 97
.word 114
.word 107
.word 33
.word 10
.space 288

.globl N4__mE___
N4__mE___:
.word 83
.word 97
.word 97
.word 98
.word 97
.word 114
.word 117
.space 172
.word 75
.word 97
.word 98
.word 97
.word 110
.space 180
.word 72
.word 97
.word 115
.word 104
.word 105
.word 98
.word 105
.word 114
.word 111
.word 107
.word 111
.word 117
.space 152
.word 65
.word 114
.word 97
.word 105
.word 103
.word 117
.word 109
.word 97
.space 168
.word 72
.word 117
.word 110
.word 98
.word 111
.word 114
.word 117
.word 116
.word 111
.word 32
.word 80
.word 101
.word 110
.word 103
.word 105
.word 110
.space 136
.word 84
.word 97
.word 105
.word 114
.word 105
.word 107
.word 117
.word 32
.word 79
.word 111
.word 107
.word 97
.word 109
.word 105
.space 144

.globl saY_HeI10_To
saY_HeI10_To:
.word 32
.word 115
.word 97
.word 121
.word 115
.word 32
.word 104
.word 101
.word 108
.word 108
.word 111
.word 32
.word 116
.word 111
.word 32
.space 100

.globl RET
RET:
.word 10
.space 16

.globl main
.type main, %function
main:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBmain:
	mov r9, #0
	mov32 r9, __HELLO
	mov r0, r9
	bl putstr
	mov r9, r0
	add sp, sp, #0
	mov r9, #0
.LB_main1_LOOP_BEGIN:
	mov r8, #1
	cmp r8, #0
	beq .LB1_LOOP_END
	b .LB1_LOOP_BODY
.LB1_LOOP_BODY:
	mov r7, r0
	mov r6, r1
	mov r0, r9
	mov r1, #6
	bl __aeabi_idiv
	mov r5, r0
	mov r0, r7
	mov r1, r6
	mov r8, r5
	mov r6, r0
	mov r5, r1
	mov r0, r9
	mov r1, #6
	bl __aeabi_idivmod
	mov r10, r1
	mov r0, r6
	mov r1, r5
	mov r7, r10
	cmp r8, r7
	mov r6, #0
	movne r6, #1
	mov r5, #0
	cmp r6, r5
	beq .LBB_2_ELSE
	b .LBB_2_IF
.LBB_2_IF:
	mov r6, #0
	mov r5, #50
	mov r10, r8
	mul r5, r5, r10
	mov r5, r5
	add r6, r6, r5
	mov r10, #0
	mov32 r10, N4__mE___
	mov r5, r10
	mov r10, #4
	mov r6, r6
	mul r6, r10, r6
	mov r6, r6
	add r5, r5, r6
	mov r0, r5
	bl putstr
	mov r6, r0
	add sp, sp, #0
	mov r6, #0
	mov32 r6, saY_HeI10_To
	mov r0, r6
	bl putstr
	mov r6, r0
	add sp, sp, #0
	mov r6, #0
	mov r5, #50
	mov r10, r7
	mul r5, r5, r10
	mov r5, r5
	add r6, r6, r5
	mov r5, #0
	mov32 r5, N4__mE___
	mov r5, r5
	mov r10, #4
	mov r6, r6
	mul r6, r10, r6
	mov r6, r6
	add r5, r5, r6
	mov r0, r5
	bl putstr
	mov r6, r0
	add sp, sp, #0
	mov r6, #0
	mov32 r6, RET
	mov r0, r6
	bl putstr
	mov r6, r0
	add sp, sp, #0
.LBB_2_ELSE:
	mov r8, #17
	mov r8, r8
	mul r8, r9, r8
	add r8, r8, #23
	mov r7, r0
	mov r6, r1
	mov r0, r8
	mov r1, #32
	bl __aeabi_idivmod
	mov r8, r1
	mov r0, r7
	mov r1, r6
	mov r9, r8
	mov r8, #0
	cmp r9, r8
	mov r8, #0
	moveq r8, #1
	mov r7, #0
	cmp r8, r7
	beq .LBB_3_ELSE
	b .LBB_3_IF
.LBB_3_IF:
	b .LB1_LOOP_END
.LBB_3_ELSE:
	b .LB_main1_LOOP_BEGIN
.LB1_LOOP_END:
	mov r0, #0
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.globl putstr
.type putstr, %function
putstr:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBputstr:
	mov r9, r0
	mov r8, #0
.LB_putstr0_LOOP_BEGIN:
	mov r7, #4
	mov r7, r7
	mul r7, r8, r7
	mov r6, r9
	ldr r7, [r6, r7]
	mov r6, #0
	cmp r7, r6
	beq .LB0_LOOP_END
	b .LB0_LOOP_BODY
.LB0_LOOP_BODY:
	mov r7, #4
	mov r7, r7
	mul r7, r8, r7
	mov r6, r9
	ldr r7, [r6, r7]
	mov r0, r7
	bl putch
	mov r7, r0
	add sp, sp, #0
	add r7, r8, #1
	mov r8, r7
	b .LB_putstr0_LOOP_BEGIN
.LB0_LOOP_END:
	mov r0, r8
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.ident "@ Generated by Takanashi Compiler Â© Haobin Chen & Jiawei Xu 1640007385"