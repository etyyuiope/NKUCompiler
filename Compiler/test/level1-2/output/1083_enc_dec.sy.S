.macro mov32, reg, val
 	movw \reg, #:lower16:\val
 	movt \reg, #:upper16:\val
.endm
.macro cpu_id, rd
 	mrc	p15, 0, \rd, c0, c0, 5
 	and	\rd, \rd, #0xF
.endm
.text
.syntax unified

.data
.globl dec
.type dec, %function
dec:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBdec:
	mov r9, r0
	mov r8, #85
	cmp r9, r8
	mov r8, #0
	movgt r8, #1
	mov r7, #0
	cmp r8, r7
	beq .LBB_dec1_ELSE
	b .LBB_dec1_IF
.LBB_dec1_IF:
	sub r8, r9, #59
	mov r9, r8
	b .LBB_dec1_END_IF
.LBB_dec1_ELSE:
	add r9, r9, #14
	mov r9, r9
	b .LBB_dec1_END_IF
.LBB_dec1_END_IF:
	mov r0, r9
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.globl enc
.type enc, %function
enc:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBenc:
	mov r9, r0
	mov r8, #25
	cmp r9, r8
	mov r8, #0
	movgt r8, #1
	mov r7, #0
	cmp r8, r7
	beq .LBB_enc0_ELSE
	b .LBB_enc0_IF
.LBB_enc0_IF:
	add r8, r9, #60
	mov r9, r8
	b .LBB_enc0_END_IF
.LBB_enc0_ELSE:
	sub r9, r9, #15
	mov r9, r9
	b .LBB_enc0_END_IF
.LBB_enc0_END_IF:
	mov r0, r9
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.globl main
.type main, %function
main:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBmain:
	mov r9, #400
	mov r0, r9
	bl enc
	mov r9, r0
	add sp, sp, #0
	mov r8, r9
	mov r0, r8
	bl dec
	mov r9, r0
	add sp, sp, #0
	mov r9, r9
	mov r0, r9
	bl putint
	mov r9, r0
	add sp, sp, #0
	mov r9, #10
	mov r0, r9
	bl putch
	mov r9, r0
	add sp, sp, #0
	mov r0, #0
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.ident "@ Generated by Takanashi Compiler Â© Haobin Chen & Jiawei Xu 1640007213"