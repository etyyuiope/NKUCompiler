.macro mov32, reg, val
 	movw \reg, #:lower16:\val
 	movt \reg, #:upper16:\val
.endm
.macro cpu_id, rd
 	mrc	p15, 0, \rd, c0, c0, 5
 	and	\rd, \rd, #0xF
.endm
.text
.syntax unified

.data
.globl deepWhileBr
.type deepWhileBr, %function
deepWhileBr:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBdeepWhileBr:
	mov r9, r0
	mov r8, r1
	add r9, r9, r8
	mov r7, r9
.LB_deepWhileBr0_LOOP_BEGIN:
	mov r9, #75
	cmp r7, r9
	mov r9, #0
	movlt r9, #1
	mov r8, #0
	cmp r9, r8
	beq .LB0_LOOP_END
	b .LB0_LOOP_BODY
.LB0_LOOP_BODY:
	mov r9, #42
	mov r8, #100
	cmp r7, r8
	mov r8, #0
	movlt r8, #1
	mov r6, #0
	cmp r8, r6
	beq .LBB_1_ELSE
	b .LBB_1_IF
.LBB_1_IF:
	mov r8, r9
	add r8, r7, r8
	mov r7, r8
	mov r8, #99
	cmp r7, r8
	mov r8, #0
	movgt r8, #1
	mov r6, #0
	cmp r8, r6
	beq .LBB_2_ELSE
	b .LBB_2_IF
.LBB_2_IF:
	mov r6, #2
	mul r6, r9, r6
	mov r8, r6
	mov r6, #1
	cmp r6, #1
	mov r6, #0
	moveq r6, #1
	mov r5, #0
	cmp r6, r5
	beq .LBB_3_ELSE
	b .LBB_3_IF
.LBB_3_IF:
	mov r6, #2
	mul r6, r8, r6
	mov r7, r6
.LBB_3_ELSE:
.LBB_2_ELSE:
.LBB_1_ELSE:
	b .LB_deepWhileBr0_LOOP_BEGIN
.LB0_LOOP_END:
	mov r0, r7
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.globl main
.type main, %function
main:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBmain:
	mov r9, #2
	mov r1, r9
	mov r0, r9
	bl deepWhileBr
	mov r9, r0
	mov r0, r9
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.ident "@ Generated by Takanashi Compiler Â© Haobin Chen & Jiawei Xu 1640004936"