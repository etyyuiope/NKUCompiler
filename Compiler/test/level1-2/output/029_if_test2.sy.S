.macro mov32, reg, val
 	movw \reg, #:lower16:\val
 	movt \reg, #:upper16:\val
.endm
.macro cpu_id, rd
 	mrc	p15, 0, \rd, c0, c0, 5
 	and	\rd, \rd, #0xF
.endm
.text
.syntax unified

.data
.globl ifElseIf
.type ifElseIf, %function
ifElseIf:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBifElseIf:
	mov r9, #5
	mov r8, #10
	mov r7, #6
	cmp r9, r7
	mov r7, #1
	beq .LBifElseIf4_COND_END
	mov r6, #11
	cmp r8, r6
	mov r6, #0
	moveq r6, #1
	mov r7, r6
.LBifElseIf4_COND_END:
	mov r6, #0
	cmp r7, r6
	beq .LBB_ifElseIf0_ELSE
	b .LBB_ifElseIf0_IF
.LBB_ifElseIf0_IF:
	mov r0, r9
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14
.LBB_ifElseIf0_ELSE:
	mov r7, #10
	cmp r8, r7
	mov r7, #0
	bne .LB_7_COND_END
	mov r6, #1
	cmp r9, r6
	mov r6, #0
	moveq r6, #1
	mov r7, r6
.LB_7_COND_END:
	mov r6, #0
	cmp r7, r6
	beq .LBB_1_ELSE
	b .LBB_1_IF
.LBB_1_IF:
	mov r9, #25
	b .LBB_1_END_IF
.LBB_1_ELSE:
	mov r7, #10
	cmp r8, r7
	mov r8, #0
	bne .LB_10_COND_END
	mov r7, #0
	sub r7, r7, #5
	cmp r9, r7
	mov r7, #0
	moveq r7, #1
	mov r8, r7
.LB_10_COND_END:
	mov r7, #0
	cmp r8, r7
	beq .LBB_2_ELSE
	b .LBB_2_IF
.LBB_2_IF:
	add r8, r9, #15
	mov r9, r8
	b .LBB_2_END_IF
.LBB_2_ELSE:
	mov r8, #0
	mov r9, r9
	sub r9, r8, r9
	mov r9, r9
	b .LBB_2_END_IF
.LBB_2_END_IF:
	b .LBB_1_END_IF
.LBB_1_END_IF:
	mov r0, r9
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.globl main
.type main, %function
main:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #0
	sub sp, sp, r8
.LBmain:
	bl ifElseIf
	mov r9, r0
	add sp, sp, #0
	mov r0, r9
	bl putint
	mov r9, r0
	add sp, sp, #0
	mov r0, #0
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.ident "@ Generated by Takanashi Compiler Â© Haobin Chen & Jiawei Xu 1640007388"