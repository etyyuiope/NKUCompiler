.macro mov32, reg, val
 	movw \reg, #:lower16:\val
 	movt \reg, #:upper16:\val
.endm
.macro cpu_id, rd
 	mrc	p15, 0, \rd, c0, c0, 5
 	and	\rd, \rd, #0xF
.endm
.text
.syntax unified

.data
.globl main
.type main, %function
main:
	push {r14}
	push {r10}
	push {r9}
	push {r8}
	push {r7}
	push {r6}
	push {r5}
	push {r4}
	push {fp}
	mov fp, sp
	mov r8, #40
	sub sp, sp, r8
.LBmain:
	str r7, [fp, #-40]
	str r6, [fp, #-32]
	mov r9, #5
	mov r8, #5
	mov r6, #1
	str r6, [fp, #-40]
	mov r6, #0
	sub r6, r6, #2
	mov r7, r6
	mov r6, #2
	str r6, [fp, #-32]
	mov r6, #1
	mul r6, r7, r6
	mov r5, r0
	mov r10, r1
	str r10, [fp, #-4]
	mov r0, r6
	mov r1, #2
	bl __aeabi_idiv
	mov r6, r0
	mov r0, r5
	ldr r5, [fp, #-4]
	mov r1, r5
	mov r5, #0
	cmp r6, r5
	mov r6, #1
	blt .LBmain9_COND_END
	mov r5, r8
	sub r5, r9, r5
	mov r10, #0
	str r10, [fp, #-4]
	ldr r10, [fp, #-4]
	cmp r5, r10
	mov r5, #0
	beq .LB_main13_COND_END
	ldr r10, [fp, #-40]
	add r10, r10, #3
	str r10, [fp, #-8]
	mov r10, r0
	str r10, [fp, #-12]
	mov r10, r1
	str r10, [fp, #-16]
	ldr r10, [fp, #-8]
	mov r0, r10
	mov r1, #2
	bl __aeabi_idivmod
	mov r10, r1
	str r10, [fp, #-20]
	ldr r10, [fp, #-12]
	mov r0, r10
	ldr r10, [fp, #-16]
	mov r1, r10
	mov r10, #0
	str r10, [fp, #-24]
	ldr r10, [fp, #-20]
	ldr r4, [fp, #-24]
	str r4, [fp, #-36]
	ldr r4, [fp, #-36]
	cmp r10, r4
	mov r10, #0
	movne r10, #1
	str r10, [fp, #-28]
	ldr r10, [fp, #-28]
	mov r5, r10
.LB_main13_COND_END:
	mov r6, r5
.LBmain9_COND_END:
	mov r5, #0
	cmp r6, r5
	beq .LBB_main0_ELSE
	b .LBB_main0_IF
.LBB_main0_IF:
	ldr r6, [fp, #-32]
	mov r0, r6
	bl putint
	mov r6, r0
.LBB_main0_ELSE:
	mov r6, r0
	mov r5, r1
	mov r0, r7
	mov r1, #2
	bl __aeabi_idivmod
	mov r7, r1
	mov r0, r6
	mov r1, r5
	add r7, r7, #67
	mov r6, #0
	cmp r7, r6
	mov r7, #1
	blt .LBmain20_COND_END
	sub r9, r9, r8
	mov r8, #0
	cmp r9, r8
	mov r9, #0
	beq .LB_main24_COND_END
	ldr r8, [fp, #-40]
	add r8, r8, #2
	mov r6, r0
	mov r5, r1
	mov r0, r8
	mov r1, #2
	bl __aeabi_idivmod
	mov r8, r1
	mov r0, r6
	mov r1, r5
	mov r6, #0
	cmp r8, r6
	mov r8, #0
	movne r8, #1
	mov r9, r8
.LB_main24_COND_END:
	mov r7, r9
.LBmain20_COND_END:
	mov r9, #0
	cmp r7, r9
	beq .LBB_main1_ELSE
	b .LBB_main1_IF
.LBB_main1_IF:
	mov r9, #4
	str r9, [fp, #-32]
	ldr r9, [fp, #-32]
	mov r0, r9
	bl putint
	mov r9, r0
.LBB_main1_ELSE:
	mov r0, #0
	mov sp, fp
	pop {fp}
	pop {r4}
	pop {r5}
	pop {r6}
	pop {r7}
	pop {r8}
	pop {r9}
	pop {r10}
	pop {r14}
	mov pc, r14

.ident "@ Generated by Takanashi Compiler Â© Haobin Chen & Jiawei Xu 1640004865"